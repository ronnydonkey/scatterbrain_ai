
import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2.50.4';

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { email, analysisData, thoughtContent, thoughtTitle } = await req.json();

    console.log('Attempting to send email to:', email);
    console.log('Analysis data available:', !!analysisData);

    // Create a simple HTML email without using Resend for now
    const emailHTML = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>${thoughtTitle}</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 800px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px; }
            .content { background: #f9f9f9; padding: 30px; border-radius: 10px; margin: 20px 0; }
            .section { margin: 30px 0; }
            .insight { background: white; padding: 20px; border-radius: 8px; margin: 15px 0; border-left: 4px solid #667eea; }
            .action-item { background: #e3f2fd; padding: 15px; border-radius: 5px; margin: 10px 0; }
            .footer { text-align: center; color: #666; margin-top: 40px; }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>üß† ScatterBrainAI Report</h1>
            <h2>${thoughtTitle}</h2>
          </div>
          
          <div class="content">
            <div class="section">
              <h3>üí≠ Original Thought</h3>
              <div class="insight">
                <p>${thoughtContent}</p>
              </div>
            </div>

            ${analysisData.summary ? `
            <div class="section">
              <h3>üìä Executive Summary</h3>
              ${analysisData.summary.keyFindings ? analysisData.summary.keyFindings.map(finding => `
                <div class="insight">
                  <p>${finding}</p>
                </div>
              `).join('') : ''}
            </div>
            ` : ''}

            ${analysisData.analysis ? `
            <div class="section">
              <h3>üîç Analysis</h3>
              ${analysisData.analysis.detailedBreakdown ? `
                <div class="insight">
                  <p>${analysisData.analysis.detailedBreakdown}</p>
                </div>
              ` : ''}
              ${analysisData.analysis.recommendations ? `
                <h4>Recommendations:</h4>
                ${analysisData.analysis.recommendations.map(rec => `
                  <div class="action-item">‚Ä¢ ${rec}</div>
                `).join('')}
              ` : ''}
            </div>
            ` : ''}

            ${analysisData.actionPlan ? `
            <div class="section">
              <h3>üéØ Action Plan</h3>
              ${analysisData.actionPlan.immediate ? `
                <h4>üî¥ Immediate Actions:</h4>
                ${analysisData.actionPlan.immediate.map(action => `
                  <div class="action-item">‚Ä¢ ${action}</div>
                `).join('')}
              ` : ''}
              ${analysisData.actionPlan.shortTerm ? `
                <h4>üü° Short Term:</h4>
                ${analysisData.actionPlan.shortTerm.map(action => `
                  <div class="action-item">‚Ä¢ ${action}</div>
                `).join('')}
              ` : ''}
              ${analysisData.actionPlan.longTerm ? `
                <h4>üü¢ Long Term:</h4>
                ${analysisData.actionPlan.longTerm.map(action => `
                  <div class="action-item">‚Ä¢ ${action}</div>
                `).join('')}
              ` : ''}
            </div>
            ` : ''}
          </div>

          <div class="footer">
            <p>Generated by ScatterBrainAI ‚Ä¢ ${new Date().toLocaleDateString()}</p>
            <p><em>Transform your scattered thoughts into actionable insights</em></p>
          </div>
        </body>
      </html>
    `;

    // For now, we'll return the HTML instead of trying to send via email
    // This avoids the domain verification issue
    console.log('Email HTML generated successfully');
    
    // You can use a different email service or ask user to copy the content
    return new Response(JSON.stringify({ 
      success: true, 
      message: 'Report generated successfully',
      emailContent: emailHTML,
      downloadUrl: `data:text/html;charset=utf-8,${encodeURIComponent(emailHTML)}`
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('Email generation failed:', error);
    return new Response(JSON.stringify({ 
      success: false, 
      error: error.message,
      fallback: 'Please try copying the report content manually'
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});
